rm(list=ls())
####################
#Vectors
####################a <- c(1, 2, 5, 3, 6, -2, 4)   # numeric vector
alt<-25:36
b <- c("one", "two", "three") # character vector
c <- c(TRUE, TRUE, TRUE, F, TRUE, F) # logical vector

a <- c(1, 2, 5, 3, 6, -2, 4) 
a[3]
a[c(1, 3, 5)] 
a[2:6]
####################
#Matrices
####################
cells <- c(1,26,24,68)
rnames <- c("R1","R2")
cnames <- c("C1","C2")
mymatrix <- matrix(cells,nrow=2,ncol=2,	byrow=FALSE,dimnames=list(rnames, cnames))
mymatrix

myvec <- scan("vectordata.csv",sep=",",what="character") 
myvec 
y <- matrix(1:20, nrow=5, ncol=4)
y
cells <- c(1,26,24,68)
rnames <- c("R1","R2")
cnames <- c("C1","C2")
mymatrix <- matrix(cells,nrow=2,ncol=2,byrow=TRUE,dimnames=list(rnames, cnames))
mymatrix
mymatrix <- matrix(cells,nrow=2,ncol=2,byrow=FALSE,dimnames=list(rnames, cnames))
mymatrix
x <- matrix(1:10, nrow=2) 
x 
x[2,]        # display the 2nd row
x[,2]        # display the 2nd column
x[1,4]       # display the value in the 1st row and 4th column
x[1, c(4,5)] # display the values in the 1st row,  4th and 5th columns

dim1 <- c("A1", "A2")                  # define labels for 1st dimension
dim2 <- c("B1", "B2", "B3")            # define labels for 2nd dimension
dim3 <- c("C1", "C2", "C3", "C4")      # define labels for 3rd dimension
z <- array(1:24, c(2, 3, 4), dimnames=list(dim1, dim2, dim3)) # define array 
z                                      # display array
z[,,4]
z[,1,]
z[2,,]
###################
### Arrays    #####
###################

dim1 <- c("A1", "A2")                          # define labels for 1st dimension
dim2 <- c("B1", "B2", "B3")                # define labels for 2nd dimension
dim3 <- c("C1", "C2", "C3", "C4")      # define labels for 3rd dimension
z <- array(1:24, c(2, 3, 4), dimnames=list(dim1, dim2, dim3)) # define array 
z   

####################
#Dataframes
####################
patientID<-1:4
age<-c(25,34,28,52)
diabetes<-c("Type1","Type2","Type1","Type1")
status<-c("Poor","Improved","Excellent","Poor")
patientdata <- data.frame(pID=patientID, age, diabetes, status, row.names=patientID)

patientdata[1,2]
patientdata[1] 
patientdata[1:2]
patientdata[,1:2] 
patientdata[1,] 
patientdata[c("diabetes","status")]
patientdata$age
####################
#Attach/Detach/search
####################
summary(mtcars$mpg) 
plot(mtcars$mpg, mtcars$disp)
plot(mtcars$mpg, mtcars$wt)

attach(mtcars)
    summary(mpg) 
    plot(mpg, disp) 
    plot(mpg, wt) 
detach(mtcars) 

search()               #displays the "search path"
attach(mtcars)   #mtcars is a dataset that's included in the base library 
search()
require(MASS)    #MASS is an included package
search()
detach("package:MASS")  #this is how we remove a package from the search path
search()
detach(mtcars)
search()

library(help = "datasets")
mpg
head(mtcars$mpg,5)
attach(mtcars)
head(mpg,5)
mpg<-c(25,36,47)
mpg
rm(mpg)
head(mpg,5)
detach(mtcars)
mpg<-c(25,36,47)
mpg
attach(mtcars)
mpg
####################
#With
####################
with(mtcars, {
	plot(disp, mpg) 
	abline(lm(mpg~disp)) 
})

with(mtcars, {
	stats<-summary(mpg)
	stats
})
stats

diabetes <- c("Type1", "Type2", "Type1", "Type1")
diabetes <- factor(diabetes)

status <- c("Poor", "Improved", "Excellent", "Poor")
status <- factor(status, ordered=TRUE)
status <- factor(status, order=TRUE, levels=c("Poor","Improved", "Excellent"))

patientID
age
diabetes
status
diabetes<-factor(diabetes)
status<-factor(status,order=TRUE)
patientdata<-data.frame(pID=patientID,age,diabetes,status,row.names=patientID)
str(patientdata)
summary(patientdata)
status<-factor(status,order=TRUE,levels=c("Poor","Improved","Excellent"))
str(patientdata)
patientdata<-data.frame(pID=patientID,age,diabetes,status,row.names=patientID)
str(patientdata)
####################
#Lists
####################
g<-"My first list"
h<-c(25,26,18,39)
j<-matrix(1:10,nrow=5)
k<-c("one","two","three")
mylist<-list(title=g,ages=h,j,k)
mylist
mylist[[2]]
mylist[["ages"]]
mylist[2]
mylist$title
####################
#Getting data into R
####################
### fix() and edit() functions
mydata <- data.frame(age=numeric(0), gender=character(0), weight=numeric(0)) 
##fix(mydata)            #changes mydata in place
##newdf<-edit(mydsata)   #edit() returns a df, so can assign the result to a new variable
apps <- read.table("StudentApplications.txt", header=TRUE, sep="\t", row.names="StudentID")
##apps <- read.table(file.choose(), header=TRUE, sep="\t", row.names="StudentID")
##install.packages("xlsx")
require(xlsx)
myFrame <- read.xlsx("StudentApplications.xlsx", 1)
##install.packages("RODBC")
require(RODBC)
myconn <-odbcConnect("myRData")
demandStats <- sqlFetch(myconn, "DemandStatistics")
demandStats
##install.packages("jsonlite")
require(jsonlite)
mydataframe<-fromJSON("data.json.txt")
head(mydataframe)

               

